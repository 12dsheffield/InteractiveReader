(0000) 3000  0011000000000000 (   2)                 .ORIG x3000
(3000) 0E14  0000111000010100 (   7)                 BRNZP start
(3001) 493C  0100100100111100 (  10) catsGame        JSR   displayBoard
(3002) 48D3  0100100011010011 (  11)                 JSR   displayCats
(3003) F020  1111000000100000 (  13) catLoop         TRAP  x20
(3004) 2C42  0010110001000010 (  14)                 LD    R6 negASCIIY
(3005) 1C06  0001110000000110 (  15)                 ADD   R6 R0 R6
(3006) 040E  0000010000001110 (  16)                 BRZ   start
(3007) 2C40  0010110001000000 (  17)                 LD    R6 negASCIIN
(3008) 1C06  0001110000000110 (  18)                 ADD   R6 R0 R6
(3009) 043A  0000010000111010 (  19)                 BRZ   quit
(300A) 0FF8  0000111111111000 (  20)                 BRNZP catLoop
(300B) 4932  0100100100110010 (  23) winner          JSR   displayBoard
(300C) 48A4  0100100010100100 (  24)                 JSR   displayWinner
(300D) F020  1111000000100000 (  26) winnerLoop      TRAP  x20
(300E) 2C38  0010110000111000 (  27)                 LD    R6 negASCIIY
(300F) 1C06  0001110000000110 (  28)                 ADD   R6 R0 R6
(3010) 0404  0000010000000100 (  29)                 BRZ   start
(3011) 2C36  0010110000110110 (  30)                 LD    R6 negASCIIN
(3012) 1C06  0001110000000110 (  31)                 ADD   R6 R0 R6
(3013) 0430  0000010000110000 (  32)                 BRZ   quit
(3014) 0FF8  0000111111111000 (  33)                 BRNZP winnerLoop
(3015) 5020  0101000000100000 (  36) start           AND   R0 R0 #0
(3016) 102A  0001000000101010 (  37)                 ADD   R0 R0 #10
(3017) F021  1111000000100001 (  38)                 TRAP  x21
(3018) F021  1111000000100001 (  39)                 TRAP  x21
(3019) F021  1111000000100001 (  40)                 TRAP  x21
(301A) F021  1111000000100001 (  41)                 TRAP  x21
(301B) 492D  0100100100101101 (  43)                 JSR   createBoard
(301C) 5020  0101000000100000 (  44)                 AND   R0 R0 #0
(301D) 1025  0001000000100101 (  45)                 ADD   R0 R0 #5
(301E) 3027  0011000000100111 (  46)                 ST    R0 isFullCounter
(301F) 491E  0100100100011110 (  49) mainLoop        JSR   displayBoard
(3020) 48E7  0100100011100111 (  50)                 JSR   p1Prompt
(3021) F020  1111000000100000 (  52) XBadInputEntered TRAP  x20
(3022) 2C22  0010110000100010 (  53)                 LD    R6 ASCIICharInputConvert
(3023) 1180  0001000110000000 (  54)                 ADD   R0 R6 R0
(3024) 5C00  0101110000000000 (  55)                 AND   R6 R0 R0
(3025) 4A68  0100101001101000 (  58)                 JSR   checkP1Input
(3026) 5020  0101000000100000 (  60)                 AND   R0 R0 #0
(3027) 102A  0001000000101010 (  61)                 ADD   R0 R0 #10
(3028) F021  1111000000100001 (  62)                 TRAP  x21
(3029) F021  1111000000100001 (  63)                 TRAP  x21
(302A) F021  1111000000100001 (  64)                 TRAP  x21
(302B) F021  1111000000100001 (  65)                 TRAP  x21
(302C) 497B  0100100101111011 (  66)                 JSR   fillX
(302D) 2018  0010000000011000 (  69)                 LD    R0 isFullCounter
(302E) 103F  0001000000111111 (  70)                 ADD   R0 R0 #-1
(302F) 05D1  0000010111010001 (  71)                 BRZ   catsGame
(3030) 3015  0011000000010101 (  72)                 ST    R0 isFullCounter
(3031) 227D  0010001001111101 (  74)                 LD    R1 ASCIIXCheck
(3032) 4816  0100100000010110 (  75)                 JSR   checkWinner
(3033) 490A  0100100100001010 (  77)                 JSR   displayBoard
(3034) 48EE  0100100011101110 (  78)                 JSR   p2Prompt
(3035) F020  1111000000100000 (  80) OBadInputEntered TRAP  x20
(3036) 2C0E  0010110000001110 (  81)                 LD    R6 ASCIICharInputConvert
(3037) 1180  0001000110000000 (  82)                 ADD   R0 R6 R0
(3038) 5C00  0101110000000000 (  83)                 AND   R6 R0 R0
(3039) 4A10  0100101000010000 (  85)                 JSR   checkP2Input
(303A) 5020  0101000000100000 (  87)                 AND   R0 R0 #0
(303B) 102A  0001000000101010 (  88)                 ADD   R0 R0 #10
(303C) F021  1111000000100001 (  89)                 TRAP  x21
(303D) F021  1111000000100001 (  90)                 TRAP  x21
(303E) F021  1111000000100001 (  91)                 TRAP  x21
(303F) F021  1111000000100001 (  92)                 TRAP  x21
(3040) 49BB  0100100110111011 (  93)                 JSR   fillO
(3041) 226E  0010001001101110 (  95)                 LD    R1 ASCIIOCheck
(3042) 4806  0100100000000110 (  96)                 JSR   checkWinner
(3043) 0FDB  0000111111011011 (  97)                 BRNZP mainLoop
(3044) F025  1111000000100101 ( 100) quit            TRAP  x25
(3045) FFD0  1111111111010000 ( 101) ASCIICharInputConvert .FILL xFFD0
(3046) 0000  0000000000000000 ( 102) isFullCounter   .FILL x0000
(3047) FF87  1111111110000111 ( 103) negASCIIY       .FILL xFF87
(3048) FF92  1111111110010010 ( 104) negASCIIN       .FILL xFF92
(3049) 2C5C  0010110001011100 ( 114) checkWinner     LD    R6 cellOne
(304A) 6180  0110000110000000 ( 115)                 LDR   R0 R6 #0
(304B) 1040  0001000001000000 ( 116)                 ADD   R0 R1 R0
(304C) 0A1B  0000101000011011 ( 117)                 BRNP  checkTwo
(304D) 2C59  0010110001011001 ( 119)                 LD    R6 cellTwo
(304E) 6180  0110000110000000 ( 120)                 LDR   R0 R6 #0
(304F) 1040  0001000001000000 ( 121)                 ADD   R0 R1 R0
(3050) 0A05  0000101000000101 ( 122)                 BRNP  cellOne2
(3051) 2C56  0010110001010110 ( 124)                 LD    R6 cellThree
(3052) 6180  0110000110000000 ( 125)                 LDR   R0 R6 #0
(3053) 1040  0001000001000000 ( 126)                 ADD   R0 R1 R0
(3054) 0A01  0000101000000001 ( 127)                 BRNP  cellOne2
(3055) 4FB5  0100111110110101 ( 128)                 JSR   winner
(3056) 2C53  0010110001010011 ( 134) cellOne2        LD    R6 cellFive
(3057) 6180  0110000110000000 ( 135)                 LDR   R0 R6 #0
(3058) 1040  0001000001000000 ( 136)                 ADD   R0 R1 R0
(3059) 0A05  0000101000000101 ( 137)                 BRNP  cellOne3
(305A) 2C53  0010110001010011 ( 139)                 LD    R6 cellNine
(305B) 6180  0110000110000000 ( 140)                 LDR   R0 R6 #0
(305C) 1040  0001000001000000 ( 141)                 ADD   R0 R1 R0
(305D) 0A01  0000101000000001 ( 142)                 BRNP  cellOne3
(305E) 4FAC  0100111110101100 ( 143)                 JSR   winner
(305F) 2C49  0010110001001001 ( 149) cellOne3        LD    R6 cellFour
(3060) 6180  0110000110000000 ( 150)                 LDR   R0 R6 #0
(3061) 1040  0001000001000000 ( 151)                 ADD   R0 R1 R0
(3062) 0A05  0000101000000101 ( 152)                 BRNP  checkTwo
(3063) 2C48  0010110001001000 ( 154)                 LD    R6 cellSeven
(3064) 6180  0110000110000000 ( 155)                 LDR   R0 R6 #0
(3065) 1040  0001000001000000 ( 156)                 ADD   R0 R1 R0
(3066) 0A01  0000101000000001 ( 157)                 BRNP  checkTwo
(3067) 4FA3  0100111110100011 ( 158)                 JSR   winner
(3068) 2C3E  0010110000111110 ( 163) checkTwo        LD    R6 cellTwo
(3069) 6180  0110000110000000 ( 164)                 LDR   R0 R6 #0
(306A) 1040  0001000001000000 ( 165)                 ADD   R0 R1 R0
(306B) 0A09  0000101000001001 ( 166)                 BRNP  checkThree
(306C) 2C3D  0010110000111101 ( 168)                 LD    R6 cellFive
(306D) 6180  0110000110000000 ( 169)                 LDR   R0 R6 #0
(306E) 1040  0001000001000000 ( 170)                 ADD   R0 R1 R0
(306F) 0A05  0000101000000101 ( 171)                 BRNP  checkThree
(3070) 2C3C  0010110000111100 ( 173)                 LD    R6 cellEight
(3071) 6180  0110000110000000 ( 174)                 LDR   R0 R6 #0
(3072) 1040  0001000001000000 ( 175)                 ADD   R0 R1 R0
(3073) 0A01  0000101000000001 ( 176)                 BRNP  checkThree
(3074) 4F96  0100111110010110 ( 177)                 JSR   winner
(3075) 2C32  0010110000110010 ( 182) checkThree      LD    R6 cellThree
(3076) 6180  0110000110000000 ( 183)                 LDR   R0 R6 #0
(3077) 1040  0001000001000000 ( 184)                 ADD   R0 R1 R0
(3078) 0A12  0000101000010010 ( 185)                 BRNP  checkFour
(3079) 2C30  0010110000110000 ( 187)                 LD    R6 cellFive
(307A) 6180  0110000110000000 ( 188)                 LDR   R0 R6 #0
(307B) 1040  0001000001000000 ( 189)                 ADD   R0 R1 R0
(307C) 0A05  0000101000000101 ( 190)                 BRNP  checkThree2
(307D) 2C2E  0010110000101110 ( 192)                 LD    R6 cellSeven
(307E) 6180  0110000110000000 ( 193)                 LDR   R0 R6 #0
(307F) 1040  0001000001000000 ( 194)                 ADD   R0 R1 R0
(3080) 0A01  0000101000000001 ( 195)                 BRNP  checkThree2
(3081) 4F89  0100111110001001 ( 196)                 JSR   winner
(3082) 2C28  0010110000101000 ( 202) checkThree2     LD    R6 cellSix
(3083) 6180  0110000110000000 ( 203)                 LDR   R0 R6 #0
(3084) 1040  0001000001000000 ( 204)                 ADD   R0 R1 R0
(3085) 0A05  0000101000000101 ( 205)                 BRNP  checkFour
(3086) 2C27  0010110000100111 ( 207)                 LD    R6 cellNine
(3087) 6180  0110000110000000 ( 208)                 LDR   R0 R6 #0
(3088) 1040  0001000001000000 ( 209)                 ADD   R0 R1 R0
(3089) 0A01  0000101000000001 ( 210)                 BRNP  checkFour
(308A) 4F80  0100111110000000 ( 211)                 JSR   winner
(308B) 2C1D  0010110000011101 ( 216) checkFour       LD    R6 cellFour
(308C) 6180  0110000110000000 ( 217)                 LDR   R0 R6 #0
(308D) 1040  0001000001000000 ( 218)                 ADD   R0 R1 R0
(308E) 0A09  0000101000001001 ( 219)                 BRNP  checkSeven
(308F) 2C1A  0010110000011010 ( 221)                 LD    R6 cellFive
(3090) 6180  0110000110000000 ( 222)                 LDR   R0 R6 #0
(3091) 1040  0001000001000000 ( 223)                 ADD   R0 R1 R0
(3092) 0A05  0000101000000101 ( 224)                 BRNP  checkSeven
(3093) 2C17  0010110000010111 ( 226)                 LD    R6 cellSix
(3094) 6180  0110000110000000 ( 227)                 LDR   R0 R6 #0
(3095) 1040  0001000001000000 ( 228)                 ADD   R0 R1 R0
(3096) 0A01  0000101000000001 ( 229)                 BRNP  checkSeven
(3097) 4F73  0100111101110011 ( 230)                 JSR   winner
(3098) 2C13  0010110000010011 ( 235) checkSeven      LD    R6 cellSeven
(3099) 6180  0110000110000000 ( 236)                 LDR   R0 R6 #0
(309A) 1040  0001000001000000 ( 237)                 ADD   R0 R1 R0
(309B) 0A09  0000101000001001 ( 238)                 BRNP  noWinner
(309C) 2C10  0010110000010000 ( 240)                 LD    R6 cellEight
(309D) 6180  0110000110000000 ( 241)                 LDR   R0 R6 #0
(309E) 1040  0001000001000000 ( 242)                 ADD   R0 R1 R0
(309F) 0A05  0000101000000101 ( 243)                 BRNP  noWinner
(30A0) 2C0D  0010110000001101 ( 245)                 LD    R6 cellNine
(30A1) 6180  0110000110000000 ( 246)                 LDR   R0 R6 #0
(30A2) 1040  0001000001000000 ( 247)                 ADD   R0 R1 R0
(30A3) 0A01  0000101000000001 ( 248)                 BRNP  noWinner
(30A4) 4F66  0100111101100110 ( 249)                 JSR   winner
(30A5) C1C0  1100000111000000 ( 253) noWinner        RET   
(30A6) 2B04  0010101100000100 ( 255) cellOne         .FILL x2B04
(30A7) 2B12  0010101100010010 ( 256) cellTwo         .FILL x2B12
(30A8) 2B20  0010101100100000 ( 257) cellThree       .FILL x2B20
(30A9) 2C2A  0010110000101010 ( 258) cellFour        .FILL x2C2A
(30AA) 2C38  0010110000111000 ( 259) cellFive        .FILL x2C38
(30AB) 2C46  0010110001000110 ( 260) cellSix         .FILL x2C46
(30AC) 2D50  0010110101010000 ( 261) cellSeven       .FILL x2D50
(30AD) 2D5E  0010110101011110 ( 262) cellEight       .FILL x2D5E
(30AE) 2D6C  0010110101101100 ( 263) cellNine        .FILL x2D6C
(30AF) FFA4  1111111110100100 ( 264) ASCIIXCheck     .FILL xFFA4
(30B0) FFD2  1111111111010010 ( 265) ASCIIOCheck     .FILL xFFD2
(30B1) 1DE0  0001110111100000 ( 272) displayWinner   ADD   R6 R7 #0
(30B2) E207  1110001000000111 ( 273)                 LEA   R1 x30BA
(30B3) 6040  0110000001000000 ( 274)                 LDR   R0 R1 #0
(30B4) F021  1111000000100001 ( 276) displayWinnerLoop TRAP  x21
(30B5) 1261  0001001001100001 ( 277)                 ADD   R1 R1 #1
(30B6) 6040  0110000001000000 ( 278)                 LDR   R0 R1 #0
(30B7) 0BFC  0000101111111100 ( 279)                 BRNP  displayWinnerLoop
(30B8) 1FA0  0001111110100000 ( 280)                 ADD   R7 R6 #0
(30B9) C1C0  1100000111000000 ( 281)                 RET   
(30BA) 0057  0000000001010111 ( 282)                 .FILL x0057
(30BB) 0069  0000000001101001 ( 282)                 .FILL x0069
(30BC) 006E  0000000001101110 ( 282)                 .FILL x006E
(30BD) 006E  0000000001101110 ( 282)                 .FILL x006E
(30BE) 0065  0000000001100101 ( 282)                 .FILL x0065
(30BF) 0072  0000000001110010 ( 282)                 .FILL x0072
(30C0) 0021  0000000000100001 ( 282)                 .FILL x0021
(30C1) 000A  0000000000001010 ( 282)                 .FILL x000A
(30C2) 0050  0000000001010000 ( 282)                 .FILL x0050
(30C3) 006C  0000000001101100 ( 282)                 .FILL x006C
(30C4) 0061  0000000001100001 ( 282)                 .FILL x0061
(30C5) 0079  0000000001111001 ( 282)                 .FILL x0079
(30C6) 0020  0000000000100000 ( 282)                 .FILL x0020
(30C7) 0061  0000000001100001 ( 282)                 .FILL x0061
(30C8) 0067  0000000001100111 ( 282)                 .FILL x0067
(30C9) 0061  0000000001100001 ( 282)                 .FILL x0061
(30CA) 0069  0000000001101001 ( 282)                 .FILL x0069
(30CB) 006E  0000000001101110 ( 282)                 .FILL x006E
(30CC) 003F  0000000000111111 ( 282)                 .FILL x003F
(30CD) 0020  0000000000100000 ( 282)                 .FILL x0020
(30CE) 0028  0000000000101000 ( 282)                 .FILL x0028
(30CF) 0079  0000000001111001 ( 282)                 .FILL x0079
(30D0) 002F  0000000000101111 ( 282)                 .FILL x002F
(30D1) 006E  0000000001101110 ( 282)                 .FILL x006E
(30D2) 0029  0000000000101001 ( 282)                 .FILL x0029
(30D3) 003A  0000000000111010 ( 282)                 .FILL x003A
(30D4) 0020  0000000000100000 ( 282)                 .FILL x0020
(30D5) 0000  0000000000000000 ( 282)                 .FILL x0000
(30D6) 1DE0  0001110111100000 ( 288) displayCats     ADD   R6 R7 #0
(30D7) E207  1110001000000111 ( 289)                 LEA   R1 x30DF
(30D8) 6040  0110000001000000 ( 290)                 LDR   R0 R1 #0
(30D9) F021  1111000000100001 ( 292) displayCatsLoop TRAP  x21
(30DA) 1261  0001001001100001 ( 293)                 ADD   R1 R1 #1
(30DB) 6040  0110000001000000 ( 294)                 LDR   R0 R1 #0
(30DC) 0BFC  0000101111111100 ( 295)                 BRNP  displayCatsLoop
(30DD) 1FA0  0001111110100000 ( 296)                 ADD   R7 R6 #0
(30DE) C1C0  1100000111000000 ( 297)                 RET   
(30DF) 0054  0000000001010100 ( 298)                 .FILL x0054
(30E0) 0068  0000000001101000 ( 298)                 .FILL x0068
(30E1) 0069  0000000001101001 ( 298)                 .FILL x0069
(30E2) 0073  0000000001110011 ( 298)                 .FILL x0073
(30E3) 0020  0000000000100000 ( 298)                 .FILL x0020
(30E4) 0067  0000000001100111 ( 298)                 .FILL x0067
(30E5) 0061  0000000001100001 ( 298)                 .FILL x0061
(30E6) 006D  0000000001101101 ( 298)                 .FILL x006D
(30E7) 0065  0000000001100101 ( 298)                 .FILL x0065
(30E8) 0020  0000000000100000 ( 298)                 .FILL x0020
(30E9) 0069  0000000001101001 ( 298)                 .FILL x0069
(30EA) 0073  0000000001110011 ( 298)                 .FILL x0073
(30EB) 0020  0000000000100000 ( 298)                 .FILL x0020
(30EC) 0061  0000000001100001 ( 298)                 .FILL x0061
(30ED) 0020  0000000000100000 ( 298)                 .FILL x0020
(30EE) 0064  0000000001100100 ( 298)                 .FILL x0064
(30EF) 0072  0000000001110010 ( 298)                 .FILL x0072
(30F0) 0061  0000000001100001 ( 298)                 .FILL x0061
(30F1) 0077  0000000001110111 ( 298)                 .FILL x0077
(30F2) 0021  0000000000100001 ( 298)                 .FILL x0021
(30F3) 000A  0000000000001010 ( 298)                 .FILL x000A
(30F4) 0050  0000000001010000 ( 298)                 .FILL x0050
(30F5) 006C  0000000001101100 ( 298)                 .FILL x006C
(30F6) 0061  0000000001100001 ( 298)                 .FILL x0061
(30F7) 0079  0000000001111001 ( 298)                 .FILL x0079
(30F8) 0020  0000000000100000 ( 298)                 .FILL x0020
(30F9) 0061  0000000001100001 ( 298)                 .FILL x0061
(30FA) 0067  0000000001100111 ( 298)                 .FILL x0067
(30FB) 0061  0000000001100001 ( 298)                 .FILL x0061
(30FC) 0069  0000000001101001 ( 298)                 .FILL x0069
(30FD) 006E  0000000001101110 ( 298)                 .FILL x006E
(30FE) 003F  0000000000111111 ( 298)                 .FILL x003F
(30FF) 0020  0000000000100000 ( 298)                 .FILL x0020
(3100) 0028  0000000000101000 ( 298)                 .FILL x0028
(3101) 0079  0000000001111001 ( 298)                 .FILL x0079
(3102) 002F  0000000000101111 ( 298)                 .FILL x002F
(3103) 006E  0000000001101110 ( 298)                 .FILL x006E
(3104) 0029  0000000000101001 ( 298)                 .FILL x0029
(3105) 003A  0000000000111010 ( 298)                 .FILL x003A
(3106) 0020  0000000000100000 ( 298)                 .FILL x0020
(3107) 0000  0000000000000000 ( 298)                 .FILL x0000
(3108) 1DE0  0001110111100000 ( 304) p1Prompt        ADD   R6 R7 #0
(3109) E207  1110001000000111 ( 305)                 LEA   R1 x3111
(310A) 6040  0110000001000000 ( 306)                 LDR   R0 R1 #0
(310B) F021  1111000000100001 ( 308) p1PromptLoop    TRAP  x21
(310C) 1261  0001001001100001 ( 309)                 ADD   R1 R1 #1
(310D) 6040  0110000001000000 ( 310)                 LDR   R0 R1 #0
(310E) 0BFC  0000101111111100 ( 311)                 BRNP  p1PromptLoop
(310F) 1FA0  0001111110100000 ( 312)                 ADD   R7 R6 #0
(3110) C1C0  1100000111000000 ( 313)                 RET   
(3111) 0050  0000000001010000 ( 314)                 .FILL x0050
(3112) 006C  0000000001101100 ( 314)                 .FILL x006C
(3113) 0061  0000000001100001 ( 314)                 .FILL x0061
(3114) 0079  0000000001111001 ( 314)                 .FILL x0079
(3115) 0065  0000000001100101 ( 314)                 .FILL x0065
(3116) 0072  0000000001110010 ( 314)                 .FILL x0072
(3117) 0020  0000000000100000 ( 314)                 .FILL x0020
(3118) 0031  0000000000110001 ( 314)                 .FILL x0031
(3119) 0027  0000000000100111 ( 314)                 .FILL x0027
(311A) 0073  0000000001110011 ( 314)                 .FILL x0073
(311B) 0020  0000000000100000 ( 314)                 .FILL x0020
(311C) 0054  0000000001010100 ( 314)                 .FILL x0054
(311D) 0075  0000000001110101 ( 314)                 .FILL x0075
(311E) 0072  0000000001110010 ( 314)                 .FILL x0072
(311F) 006E  0000000001101110 ( 314)                 .FILL x006E
(3120) 003A  0000000000111010 ( 314)                 .FILL x003A
(3121) 0020  0000000000100000 ( 314)                 .FILL x0020
(3122) 0000  0000000000000000 ( 314)                 .FILL x0000
(3123) 1DE0  0001110111100000 ( 320) p2Prompt        ADD   R6 R7 #0
(3124) E207  1110001000000111 ( 321)                 LEA   R1 x312C
(3125) 6040  0110000001000000 ( 322)                 LDR   R0 R1 #0
(3126) F021  1111000000100001 ( 324) p2PromptLoop    TRAP  x21
(3127) 1261  0001001001100001 ( 325)                 ADD   R1 R1 #1
(3128) 6040  0110000001000000 ( 326)                 LDR   R0 R1 #0
(3129) 0BFC  0000101111111100 ( 327)                 BRNP  p2PromptLoop
(312A) 1FA0  0001111110100000 ( 328)                 ADD   R7 R6 #0
(312B) C1C0  1100000111000000 ( 329)                 RET   
(312C) 0050  0000000001010000 ( 330)                 .FILL x0050
(312D) 006C  0000000001101100 ( 330)                 .FILL x006C
(312E) 0061  0000000001100001 ( 330)                 .FILL x0061
(312F) 0079  0000000001111001 ( 330)                 .FILL x0079
(3130) 0065  0000000001100101 ( 330)                 .FILL x0065
(3131) 0072  0000000001110010 ( 330)                 .FILL x0072
(3132) 0020  0000000000100000 ( 330)                 .FILL x0020
(3133) 0032  0000000000110010 ( 330)                 .FILL x0032
(3134) 0027  0000000000100111 ( 330)                 .FILL x0027
(3135) 0073  0000000001110011 ( 330)                 .FILL x0073
(3136) 0020  0000000000100000 ( 330)                 .FILL x0020
(3137) 0054  0000000001010100 ( 330)                 .FILL x0054
(3138) 0075  0000000001110101 ( 330)                 .FILL x0075
(3139) 0072  0000000001110010 ( 330)                 .FILL x0072
(313A) 006E  0000000001101110 ( 330)                 .FILL x006E
(313B) 003A  0000000000111010 ( 330)                 .FILL x003A
(313C) 0020  0000000000100000 ( 330)                 .FILL x0020
(313D) 0000  0000000000000000 ( 330)                 .FILL x0000
(313E) 1BE0  0001101111100000 ( 351) displayBoard    ADD   R5 R7 #0
(313F) 2C58  0010110001011000 ( 352)                 LD    R6 pointerInitialize
(3140) 265D  0010011001011101 ( 353)                 LD    R3 arraySize
(3141) 6180  0110000110000000 ( 354)                 LDR   R0 R6 #0
(3142) F021  1111000000100001 ( 357) displayLoop     TRAP  x21
(3143) 1DA1  0001110110100001 ( 358)                 ADD   R6 R6 #1
(3144) 6180  0110000110000000 ( 359)                 LDR   R0 R6 #0
(3145) 16FF  0001011011111111 ( 360)                 ADD   R3 R3 #-1
(3146) 03FB  0000001111111011 ( 361)                 BRP   displayLoop
(3147) 1F60  0001111101100000 ( 362)                 ADD   R7 R5 #0
(3148) C1C0  1100000111000000 ( 363)                 RET   
(3149) 2C4E  0010110001001110 ( 384) createBoard     LD    R6 pointerInitialize
(314A) 2653  0010011001010011 ( 388)                 LD    R3 arraySize
(314B) 2051  0010000001010001 ( 389)                 LD    R0 space
(314C) 7180  0111000110000000 ( 392) fillWithSpacesLoop STR   R0 R6 #0
(314D) 1DA1  0001110110100001 ( 393)                 ADD   R6 R6 #1
(314E) 16FF  0001011011111111 ( 394)                 ADD   R3 R3 #-1
(314F) 03FC  0000001111111100 ( 395)                 BRP   fillWithSpacesLoop
(3150) 2C47  0010110001000111 ( 398)                 LD    R6 pointerInitialize
(3151) 264D  0010011001001101 ( 402)                 LD    R3 arrayHeight
(3152) 2046  0010000001000110 ( 403)                 LD    R0 endl
(3153) 224C  0010001001001100 ( 404)                 LD    R1 arrayWidth
(3154) 1D81  0001110110000001 ( 405)                 ADD   R6 R6 R1
(3155) 1DBF  0001110110111111 ( 406)                 ADD   R6 R6 #-1
(3156) 7180  0111000110000000 ( 407)                 STR   R0 R6 #0
(3157) 16FF  0001011011111111 ( 408)                 ADD   R3 R3 #-1
(3158) 1D81  0001110110000001 ( 411) fillWithEndlsLoop ADD   R6 R6 R1
(3159) 7180  0111000110000000 ( 412)                 STR   R0 R6 #0
(315A) 16FF  0001011011111111 ( 413)                 ADD   R3 R3 #-1
(315B) 03FC  0000001111111100 ( 414)                 BRP   fillWithEndlsLoop
(315C) 2C3B  0010110000111011 ( 417)                 LD    R6 pointerInitialize
(315D) 2641  0010011001000001 ( 421)                 LD    R3 arrayHeight
(315E) 203B  0010000000111011 ( 422)                 LD    R0 upDash
(315F) 1DAD  0001110110101101 ( 423)                 ADD   R6 R6 #13
(3160) 7180  0111000110000000 ( 424)                 STR   R0 R6 #0
(3161) 1DAE  0001110110101110 ( 425)                 ADD   R6 R6 #14
(3162) 7180  0111000110000000 ( 426)                 STR   R0 R6 #0
(3163) 16FF  0001011011111111 ( 427)                 ADD   R3 R3 #-1
(3164) 223C  0010001000111100 ( 428)                 LD    R1 twentyeight
(3165) 1D81  0001110110000001 ( 431) fillWithUpLoop  ADD   R6 R6 R1
(3166) 7180  0111000110000000 ( 432)                 STR   R0 R6 #0
(3167) 1DAE  0001110110101110 ( 433)                 ADD   R6 R6 #14
(3168) 7180  0111000110000000 ( 434)                 STR   R0 R6 #0
(3169) 16FF  0001011011111111 ( 435)                 ADD   R3 R3 #-1
(316A) 03FA  0000001111111010 ( 436)                 BRP   fillWithUpLoop
(316B) 2C36  0010110000110110 ( 442)                 LD    R6 firstHoriz
(316C) 2633  0010011000110011 ( 443)                 LD    R3 arrayWidth
(316D) 16FF  0001011011111111 ( 444)                 ADD   R3 R3 #-1
(316E) 202D  0010000000101101 ( 445)                 LD    R0 sideDash
(316F) 7180  0111000110000000 ( 448) firstHorizLoop  STR   R0 R6 #0
(3170) 1DA1  0001110110100001 ( 449)                 ADD   R6 R6 #1
(3171) 16FF  0001011011111111 ( 450)                 ADD   R3 R3 #-1
(3172) 03FC  0000001111111100 ( 451)                 BRP   firstHorizLoop
(3173) 2C2F  0010110000101111 ( 453)                 LD    R6 secondHoriz
(3174) 262B  0010011000101011 ( 454)                 LD    R3 arrayWidth
(3175) 16FF  0001011011111111 ( 455)                 ADD   R3 R3 #-1
(3176) 7180  0111000110000000 ( 458) secondHorizLoop STR   R0 R6 #0
(3177) 1DA1  0001110110100001 ( 459)                 ADD   R6 R6 #1
(3178) 16FF  0001011011111111 ( 460)                 ADD   R3 R3 #-1
(3179) 03FC  0000001111111100 ( 461)                 BRP   secondHorizLoop
(317A) 2C27  0010110000100111 ( 467)                 LD    R6 firstHoriz
(317B) 201F  0010000000011111 ( 468)                 LD    R0 plus
(317C) 1DAD  0001110110101101 ( 470)                 ADD   R6 R6 #13
(317D) 7180  0111000110000000 ( 471)                 STR   R0 R6 #0
(317E) 1DAE  0001110110101110 ( 472)                 ADD   R6 R6 #14
(317F) 7180  0111000110000000 ( 473)                 STR   R0 R6 #0
(3180) 2C22  0010110000100010 ( 474)                 LD    R6 secondHoriz
(3181) 1DAD  0001110110101101 ( 476)                 ADD   R6 R6 #13
(3182) 7180  0111000110000000 ( 477)                 STR   R0 R6 #0
(3183) 1DAE  0001110110101110 ( 478)                 ADD   R6 R6 #14
(3184) 7180  0111000110000000 ( 479)                 STR   R0 R6 #0
(3185) 2C1E  0010110000011110 ( 485)                 LD    R6 rowOneDigPos
(3186) 56E0  0101011011100000 ( 486)                 AND   R3 R3 #0
(3187) 16E3  0001011011100011 ( 487)                 ADD   R3 R3 #3
(3188) 201E  0010000000011110 ( 488)                 LD    R0 ASCIIDigitConvert
(3189) 1021  0001000000100001 ( 490) CellNumberLoop  ADD   R0 R0 #1
(318A) 7180  0111000110000000 ( 491)                 STR   R0 R6 #0
(318B) 1DAE  0001110110101110 ( 492)                 ADD   R6 R6 #14
(318C) 1021  0001000000100001 ( 493)                 ADD   R0 R0 #1
(318D) 7180  0111000110000000 ( 494)                 STR   R0 R6 #0
(318E) 1DAE  0001110110101110 ( 495)                 ADD   R6 R6 #14
(318F) 1021  0001000000100001 ( 496)                 ADD   R0 R0 #1
(3190) 7180  0111000110000000 ( 497)                 STR   R0 R6 #0
(3191) 2C13  0010110000010011 ( 498)                 LD    R6 rowTwoDigPos
(3192) 16FE  0001011011111110 ( 499)                 ADD   R3 R3 #-2
(3193) 03F5  0000001111110101 ( 500)                 BRP   CellNumberLoop
(3194) 2C11  0010110000010001 ( 501)                 LD    R6 rowThreeDigPos
(3195) 16E1  0001011011100001 ( 502)                 ADD   R3 R3 #1
(3196) 05F2  0000010111110010 ( 503)                 BRZ   CellNumberLoop
(3197) C1C0  1100000111000000 ( 507)                 RET   
(3198) 2B00  0010101100000000 ( 511) pointerInitialize .FILL x2B00
(3199) 000A  0000000000001010 ( 512) endl            .FILL x000A
(319A) 007C  0000000001111100 ( 513) upDash          .FILL x007C
(319B) 002B  0000000000101011 ( 514) plus            .FILL x002B
(319C) 002D  0000000000101101 ( 515) sideDash        .FILL x002D
(319D) 0020  0000000000100000 ( 516) space           .FILL x0020
(319E) 0348  0000001101001000 ( 517) arraySize       .FILL x0348
(319F) 0014  0000000000010100 ( 518) arrayHeight     .FILL x0014
(31A0) 002A  0000000000101010 ( 519) arrayWidth      .FILL x002A
(31A1) 001C  0000000000011100 ( 520) twentyeight     .FILL x001C
(31A2) 2BFC  0010101111111100 ( 521) firstHoriz      .FILL x2BFC
(31A3) 2D22  0010110100100010 ( 522) secondHoriz     .FILL x2D22
(31A4) 2BDE  0010101111011110 ( 523) rowOneDigPos    .FILL x2BDE
(31A5) 2D04  0010110100000100 ( 524) rowTwoDigPos    .FILL x2D04
(31A6) 2E2A  0010111000101010 ( 525) rowThreeDigPos  .FILL x2E2A
(31A7) 0030  0000000000110000 ( 526) ASCIIDigitConvert .FILL x0030
(31A8) 1DBF  0001110110111111 ( 548) fillX           ADD   R6 R6 #-1
(31A9) 040F  0000010000001111 ( 549)                 BRZ   pointXOne
(31AA) 1DBF  0001110110111111 ( 551)                 ADD   R6 R6 #-1
(31AB) 040F  0000010000001111 ( 552)                 BRZ   pointXTwo
(31AC) 1DBF  0001110110111111 ( 554)                 ADD   R6 R6 #-1
(31AD) 040F  0000010000001111 ( 555)                 BRZ   pointXThree
(31AE) 1DBF  0001110110111111 ( 557)                 ADD   R6 R6 #-1
(31AF) 040F  0000010000001111 ( 558)                 BRZ   pointXFour
(31B0) 1DBF  0001110110111111 ( 560)                 ADD   R6 R6 #-1
(31B1) 040F  0000010000001111 ( 561)                 BRZ   pointXFive
(31B2) 1DBF  0001110110111111 ( 563)                 ADD   R6 R6 #-1
(31B3) 040F  0000010000001111 ( 564)                 BRZ   pointXSix
(31B4) 1DBF  0001110110111111 ( 566)                 ADD   R6 R6 #-1
(31B5) 040F  0000010000001111 ( 567)                 BRZ   pointXSeven
(31B6) 1DBF  0001110110111111 ( 569)                 ADD   R6 R6 #-1
(31B7) 040F  0000010000001111 ( 570)                 BRZ   pointXEight
(31B8) 0E10  0000111000010000 ( 572)                 BRNZP pointXNine
(31B9) 2C32  0010110000110010 ( 578) pointXOne       LD    R6 onePos
(31BA) 0E10  0000111000010000 ( 579)                 BRNZP fillTheX
(31BB) 2C31  0010110000110001 ( 586) pointXTwo       LD    R6 twoPos
(31BC) 0E0E  0000111000001110 ( 587)                 BRNZP fillTheX
(31BD) 2C30  0010110000110000 ( 594) pointXThree     LD    R6 threePos
(31BE) 0E0C  0000111000001100 ( 595)                 BRNZP fillTheX
(31BF) 2C2F  0010110000101111 ( 602) pointXFour      LD    R6 fourPos
(31C0) 0E0A  0000111000001010 ( 603)                 BRNZP fillTheX
(31C1) 2C2E  0010110000101110 ( 610) pointXFive      LD    R6 fivePos
(31C2) 0E08  0000111000001000 ( 611)                 BRNZP fillTheX
(31C3) 2C2D  0010110000101101 ( 618) pointXSix       LD    R6 sixPos
(31C4) 0E06  0000111000000110 ( 619)                 BRNZP fillTheX
(31C5) 2C2C  0010110000101100 ( 626) pointXSeven     LD    R6 sevenPos
(31C6) 0E04  0000111000000100 ( 627)                 BRNZP fillTheX
(31C7) 2C2B  0010110000101011 ( 634) pointXEight     LD    R6 eightPos
(31C8) 0E02  0000111000000010 ( 635)                 BRNZP fillTheX
(31C9) 2C2A  0010110000101010 ( 642) pointXNine      LD    R6 ninePos
(31CA) 0E00  0000111000000000 ( 643)                 BRNZP fillTheX
(31CB) 2029  0010000000101001 ( 651) fillTheX        LD    R0 descendingDash
(31CC) 7180  0111000110000000 ( 652)                 STR   R0 R6 #0
(31CD) 1DA4  0001110110100100 ( 653)                 ADD   R6 R6 #4
(31CE) 2027  0010000000100111 ( 654)                 LD    R0 ascendingDash
(31CF) 7180  0111000110000000 ( 655)                 STR   R0 R6 #0
(31D0) 202A  0010000000101010 ( 656)                 LD    R0 thirtynine
(31D1) 1D80  0001110110000000 ( 657)                 ADD   R6 R6 R0
(31D2) 2022  0010000000100010 ( 658)                 LD    R0 descendingDash
(31D3) 7180  0111000110000000 ( 659)                 STR   R0 R6 #0
(31D4) 1DA2  0001110110100010 ( 660)                 ADD   R6 R6 #2
(31D5) 2020  0010000000100000 ( 661)                 LD    R0 ascendingDash
(31D6) 7180  0111000110000000 ( 662)                 STR   R0 R6 #0
(31D7) 2023  0010000000100011 ( 663)                 LD    R0 thirtynine
(31D8) 1022  0001000000100010 ( 664)                 ADD   R0 R0 #2
(31D9) 1C06  0001110000000110 ( 665)                 ADD   R6 R0 R6
(31DA) 201C  0010000000011100 ( 666)                 LD    R0 xChar
(31DB) 7180  0111000110000000 ( 667)                 STR   R0 R6 #0
(31DC) 201E  0010000000011110 ( 668)                 LD    R0 thirtynine
(31DD) 1022  0001000000100010 ( 669)                 ADD   R0 R0 #2
(31DE) 1C06  0001110000000110 ( 670)                 ADD   R6 R0 R6
(31DF) 2016  0010000000010110 ( 671)                 LD    R0 ascendingDash
(31E0) 7180  0111000110000000 ( 672)                 STR   R0 R6 #0
(31E1) 1DA2  0001110110100010 ( 673)                 ADD   R6 R6 #2
(31E2) 2012  0010000000010010 ( 674)                 LD    R0 descendingDash
(31E3) 7180  0111000110000000 ( 675)                 STR   R0 R6 #0
(31E4) 2016  0010000000010110 ( 676)                 LD    R0 thirtynine
(31E5) 1C06  0001110000000110 ( 677)                 ADD   R6 R0 R6
(31E6) 200F  0010000000001111 ( 678)                 LD    R0 ascendingDash
(31E7) 7180  0111000110000000 ( 679)                 STR   R0 R6 #0
(31E8) 1DA4  0001110110100100 ( 680)                 ADD   R6 R6 #4
(31E9) 200B  0010000000001011 ( 681)                 LD    R0 descendingDash
(31EA) 7180  0111000110000000 ( 682)                 STR   R0 R6 #0
(31EB) C1C0  1100000111000000 ( 685)                 RET   
(31EC) 2B04  0010101100000100 ( 687) onePos          .FILL x2B04
(31ED) 2B12  0010101100010010 ( 688) twoPos          .FILL x2B12
(31EE) 2B20  0010101100100000 ( 689) threePos        .FILL x2B20
(31EF) 2C2A  0010110000101010 ( 690) fourPos         .FILL x2C2A
(31F0) 2C38  0010110000111000 ( 691) fivePos         .FILL x2C38
(31F1) 2C46  0010110001000110 ( 692) sixPos          .FILL x2C46
(31F2) 2D50  0010110101010000 ( 693) sevenPos        .FILL x2D50
(31F3) 2D5E  0010110101011110 ( 694) eightPos        .FILL x2D5E
(31F4) 2D6C  0010110101101100 ( 695) ninePos         .FILL x2D6C
(31F5) 005C  0000000001011100 ( 696) descendingDash  .FILL x005C
(31F6) 002F  0000000000101111 ( 697) ascendingDash   .FILL x002F
(31F7) 0058  0000000001011000 ( 698) xChar           .FILL x0058
(31F8) 005F  0000000001011111 ( 699) underscore      .FILL x005F
(31F9) 002E  0000000000101110 ( 700) period          .FILL x002E
(31FA) 0027  0000000000100111 ( 701) apostrophe      .FILL x0027
(31FB) 0027  0000000000100111 ( 702) thirtynine      .FILL x0027
(31FC) 1DBF  0001110110111111 ( 723) fillO           ADD   R6 R6 #-1
(31FD) 040F  0000010000001111 ( 724)                 BRZ   pointOOne
(31FE) 1DBF  0001110110111111 ( 726)                 ADD   R6 R6 #-1
(31FF) 040F  0000010000001111 ( 727)                 BRZ   pointOTwo
(3200) 1DBF  0001110110111111 ( 729)                 ADD   R6 R6 #-1
(3201) 040F  0000010000001111 ( 730)                 BRZ   pointOThree
(3202) 1DBF  0001110110111111 ( 732)                 ADD   R6 R6 #-1
(3203) 040F  0000010000001111 ( 733)                 BRZ   pointOFour
(3204) 1DBF  0001110110111111 ( 735)                 ADD   R6 R6 #-1
(3205) 040F  0000010000001111 ( 736)                 BRZ   pointOFive
(3206) 1DBF  0001110110111111 ( 738)                 ADD   R6 R6 #-1
(3207) 040F  0000010000001111 ( 739)                 BRZ   pointOSix
(3208) 1DBF  0001110110111111 ( 741)                 ADD   R6 R6 #-1
(3209) 040F  0000010000001111 ( 742)                 BRZ   pointOSeven
(320A) 1DBF  0001110110111111 ( 744)                 ADD   R6 R6 #-1
(320B) 040F  0000010000001111 ( 745)                 BRZ   pointOEight
(320C) 0E10  0000111000010000 ( 747)                 BRNZP pointONine
(320D) 2DDE  0010110111011110 ( 753) pointOOne       LD    R6 onePos
(320E) 0E10  0000111000010000 ( 754)                 BRNZP fillTheO
(320F) 2DDD  0010110111011101 ( 761) pointOTwo       LD    R6 twoPos
(3210) 0E0E  0000111000001110 ( 762)                 BRNZP fillTheO
(3211) 2DDC  0010110111011100 ( 769) pointOThree     LD    R6 threePos
(3212) 0E0C  0000111000001100 ( 770)                 BRNZP fillTheO
(3213) 2DDB  0010110111011011 ( 777) pointOFour      LD    R6 fourPos
(3214) 0E0A  0000111000001010 ( 778)                 BRNZP fillTheO
(3215) 2DDA  0010110111011010 ( 785) pointOFive      LD    R6 fivePos
(3216) 0E08  0000111000001000 ( 786)                 BRNZP fillTheO
(3217) 2DD9  0010110111011001 ( 793) pointOSix       LD    R6 sixPos
(3218) 0E06  0000111000000110 ( 794)                 BRNZP fillTheO
(3219) 2DD8  0010110111011000 ( 801) pointOSeven     LD    R6 sevenPos
(321A) 0E04  0000111000000100 ( 802)                 BRNZP fillTheO
(321B) 2DD7  0010110111010111 ( 809) pointOEight     LD    R6 eightPos
(321C) 0E02  0000111000000010 ( 810)                 BRNZP fillTheO
(321D) 2DD6  0010110111010110 ( 817) pointONine      LD    R6 ninePos
(321E) 0E00  0000111000000000 ( 818)                 BRNZP fillTheO
(321F) 21D6  0010000111010110 ( 831) fillTheO        LD    R0 ascendingDash
(3220) 23D4  0010001111010100 ( 832)                 LD    R1 descendingDash
(3221) 25D7  0010010111010111 ( 833)                 LD    R2 period
(3222) 2777  0010011101110111 ( 834)                 LD    R3 upDash
(3223) 29D7  0010100111010111 ( 835)                 LD    R4 thirtynine
(3224) 2B77  0010101101110111 ( 836)                 LD    R5 sideDash
(3225) 193E  0001100100111110 ( 837)                 ADD   R4 R4 #-2
(3226) 7580  0111010110000000 ( 838)                 STR   R2 R6 #0
(3227) 1DA1  0001110110100001 ( 839)                 ADD   R6 R6 #1
(3228) 7B80  0111101110000000 ( 840)                 STR   R5 R6 #0
(3229) 1DA1  0001110110100001 ( 841)                 ADD   R6 R6 #1
(322A) 7B80  0111101110000000 ( 842)                 STR   R5 R6 #0
(322B) 1DA1  0001110110100001 ( 843)                 ADD   R6 R6 #1
(322C) 7B80  0111101110000000 ( 844)                 STR   R5 R6 #0
(322D) 1DA1  0001110110100001 ( 845)                 ADD   R6 R6 #1
(322E) 7580  0111010110000000 ( 846)                 STR   R2 R6 #0
(322F) 1D84  0001110110000100 ( 847)                 ADD   R6 R6 R4
(3230) 7180  0111000110000000 ( 848)                 STR   R0 R6 #0
(3231) 1DA6  0001110110100110 ( 849)                 ADD   R6 R6 #6
(3232) 7380  0111001110000000 ( 850)                 STR   R1 R6 #0
(3233) 193E  0001100100111110 ( 851)                 ADD   R4 R4 #-2
(3234) 1D84  0001110110000100 ( 852)                 ADD   R6 R6 R4
(3235) 7780  0111011110000000 ( 853)                 STR   R3 R6 #0
(3236) 1DA8  0001110110101000 ( 854)                 ADD   R6 R6 #8
(3237) 7780  0111011110000000 ( 855)                 STR   R3 R6 #0
(3238) 1D06  0001110100000110 ( 856)                 ADD   R6 R4 R6
(3239) 7380  0111001110000000 ( 857)                 STR   R1 R6 #0
(323A) 1DA6  0001110110100110 ( 858)                 ADD   R6 R6 #6
(323B) 7180  0111000110000000 ( 859)                 STR   R0 R6 #0
(323C) 1921  0001100100100001 ( 860)                 ADD   R4 R4 #1
(323D) 1921  0001100100100001 ( 861)                 ADD   R4 R4 #1
(323E) 1D06  0001110100000110 ( 862)                 ADD   R6 R4 R6
(323F) 21BA  0010000110111010 ( 863)                 LD    R0 apostrophe
(3240) 7180  0111000110000000 ( 864)                 STR   R0 R6 #0
(3241) 1DA1  0001110110100001 ( 865)                 ADD   R6 R6 #1
(3242) 7B80  0111101110000000 ( 866)                 STR   R5 R6 #0
(3243) 1DA1  0001110110100001 ( 867)                 ADD   R6 R6 #1
(3244) 7B80  0111101110000000 ( 868)                 STR   R5 R6 #0
(3245) 1DA1  0001110110100001 ( 869)                 ADD   R6 R6 #1
(3246) 7B80  0111101110000000 ( 870)                 STR   R5 R6 #0
(3247) 1DA1  0001110110100001 ( 871)                 ADD   R6 R6 #1
(3248) 7180  0111000110000000 ( 872)                 STR   R0 R6 #0
(3249) C1C0  1100000111000000 ( 876)                 RET   
(324A) 17A0  0001011110100000 ( 890) checkP2Input    ADD   R3 R6 #0
(324B) 2086  0010000010000110 ( 891)                 LD    R0 negSpace
(324C) 16FF  0001011011111111 ( 893)                 ADD   R3 R3 #-1
(324D) 0411  0000010000010001 ( 894)                 BRZ   OCheckCell1
(324E) 16FF  0001011011111111 ( 895)                 ADD   R3 R3 #-1
(324F) 0414  0000010000010100 ( 896)                 BRZ   OCheckCell2
(3250) 16FF  0001011011111111 ( 897)                 ADD   R3 R3 #-1
(3251) 0417  0000010000010111 ( 898)                 BRZ   OCheckCell3
(3252) 16FF  0001011011111111 ( 899)                 ADD   R3 R3 #-1
(3253) 041A  0000010000011010 ( 900)                 BRZ   OCheckCell4
(3254) 16FF  0001011011111111 ( 901)                 ADD   R3 R3 #-1
(3255) 041D  0000010000011101 ( 902)                 BRZ   OCheckCell5
(3256) 16FF  0001011011111111 ( 903)                 ADD   R3 R3 #-1
(3257) 0420  0000010000100000 ( 904)                 BRZ   OCheckCell6
(3258) 16FF  0001011011111111 ( 905)                 ADD   R3 R3 #-1
(3259) 0423  0000010000100011 ( 906)                 BRZ   OCheckCell7
(325A) 16FF  0001011011111111 ( 907)                 ADD   R3 R3 #-1
(325B) 0426  0000010000100110 ( 908)                 BRZ   OCheckCell8
(325C) 16FF  0001011011111111 ( 909)                 ADD   R3 R3 #-1
(325D) 0429  0000010000101001 ( 910)                 BRZ   OCheckCell9
(325E) 0E2E  0000111000101110 ( 911)                 BRNZP OBadInput
(325F) 278C  0010011110001100 ( 917) OCheckCell1     LD    R3 onePos
(3260) 66C0  0110011011000000 ( 918)                 LDR   R3 R3 #0
(3261) 1603  0001011000000011 ( 919)                 ADD   R3 R0 R3
(3262) 0429  0000010000101001 ( 920)                 BRZ   checkP2InputReturn
(3263) 0E29  0000111000101001 ( 921)                 BRNZP OBadInput
(3264) 2788  0010011110001000 ( 924) OCheckCell2     LD    R3 twoPos
(3265) 66C0  0110011011000000 ( 925)                 LDR   R3 R3 #0
(3266) 1603  0001011000000011 ( 926)                 ADD   R3 R0 R3
(3267) 0424  0000010000100100 ( 927)                 BRZ   checkP2InputReturn
(3268) 0E24  0000111000100100 ( 928)                 BRNZP OBadInput
(3269) 2784  0010011110000100 ( 931) OCheckCell3     LD    R3 threePos
(326A) 66C0  0110011011000000 ( 932)                 LDR   R3 R3 #0
(326B) 1603  0001011000000011 ( 933)                 ADD   R3 R0 R3
(326C) 041F  0000010000011111 ( 934)                 BRZ   checkP2InputReturn
(326D) 0E1F  0000111000011111 ( 935)                 BRNZP OBadInput
(326E) 2780  0010011110000000 ( 938) OCheckCell4     LD    R3 fourPos
(326F) 66C0  0110011011000000 ( 939)                 LDR   R3 R3 #0
(3270) 1603  0001011000000011 ( 940)                 ADD   R3 R0 R3
(3271) 041A  0000010000011010 ( 941)                 BRZ   checkP2InputReturn
(3272) 0E1A  0000111000011010 ( 942)                 BRNZP OBadInput
(3273) 277C  0010011101111100 ( 945) OCheckCell5     LD    R3 fivePos
(3274) 66C0  0110011011000000 ( 946)                 LDR   R3 R3 #0
(3275) 1603  0001011000000011 ( 947)                 ADD   R3 R0 R3
(3276) 0415  0000010000010101 ( 948)                 BRZ   checkP2InputReturn
(3277) 0E15  0000111000010101 ( 949)                 BRNZP OBadInput
(3278) 2778  0010011101111000 ( 952) OCheckCell6     LD    R3 sixPos
(3279) 66C0  0110011011000000 ( 953)                 LDR   R3 R3 #0
(327A) 1603  0001011000000011 ( 954)                 ADD   R3 R0 R3
(327B) 0410  0000010000010000 ( 955)                 BRZ   checkP2InputReturn
(327C) 0E10  0000111000010000 ( 956)                 BRNZP OBadInput
(327D) 2774  0010011101110100 ( 959) OCheckCell7     LD    R3 sevenPos
(327E) 66C0  0110011011000000 ( 960)                 LDR   R3 R3 #0
(327F) 1603  0001011000000011 ( 961)                 ADD   R3 R0 R3
(3280) 040B  0000010000001011 ( 962)                 BRZ   checkP2InputReturn
(3281) 0E0B  0000111000001011 ( 963)                 BRNZP OBadInput
(3282) 2770  0010011101110000 ( 966) OCheckCell8     LD    R3 eightPos
(3283) 66C0  0110011011000000 ( 967)                 LDR   R3 R3 #0
(3284) 1603  0001011000000011 ( 968)                 ADD   R3 R0 R3
(3285) 0406  0000010000000110 ( 969)                 BRZ   checkP2InputReturn
(3286) 0E06  0000111000000110 ( 970)                 BRNZP OBadInput
(3287) 276C  0010011101101100 ( 973) OCheckCell9     LD    R3 ninePos
(3288) 66C0  0110011011000000 ( 974)                 LDR   R3 R3 #0
(3289) 1603  0001011000000011 ( 975)                 ADD   R3 R0 R3
(328A) 0401  0000010000000001 ( 976)                 BRZ   checkP2InputReturn
(328B) 0E01  0000111000000001 ( 977)                 BRNZP OBadInput
(328C) C1C0  1100000111000000 ( 983) checkP2InputReturn RET   
(328D) 4DA7  0100110110100111 ( 986) OBadInput       JSR   OBadInputEntered
(328E) 17A0  0001011110100000 (1002) checkP1Input    ADD   R3 R6 #0
(328F) 2042  0010000001000010 (1003)                 LD    R0 negSpace
(3290) 16FF  0001011011111111 (1005)                 ADD   R3 R3 #-1
(3291) 0411  0000010000010001 (1006)                 BRZ   XCheckCell1
(3292) 16FF  0001011011111111 (1007)                 ADD   R3 R3 #-1
(3293) 0414  0000010000010100 (1008)                 BRZ   XCheckCell2
(3294) 16FF  0001011011111111 (1009)                 ADD   R3 R3 #-1
(3295) 0417  0000010000010111 (1010)                 BRZ   XCheckCell3
(3296) 16FF  0001011011111111 (1011)                 ADD   R3 R3 #-1
(3297) 041A  0000010000011010 (1012)                 BRZ   XCheckCell4
(3298) 16FF  0001011011111111 (1013)                 ADD   R3 R3 #-1
(3299) 041D  0000010000011101 (1014)                 BRZ   XCheckCell5
(329A) 16FF  0001011011111111 (1015)                 ADD   R3 R3 #-1
(329B) 0420  0000010000100000 (1016)                 BRZ   XCheckCell6
(329C) 16FF  0001011011111111 (1017)                 ADD   R3 R3 #-1
(329D) 0423  0000010000100011 (1018)                 BRZ   XCheckCell7
(329E) 16FF  0001011011111111 (1019)                 ADD   R3 R3 #-1
(329F) 0426  0000010000100110 (1020)                 BRZ   XCheckCell8
(32A0) 16FF  0001011011111111 (1021)                 ADD   R3 R3 #-1
(32A1) 0429  0000010000101001 (1022)                 BRZ   XCheckCell9
(32A2) 0E2E  0000111000101110 (1023)                 BRNZP XBadInput
(32A3) 2748  0010011101001000 (1029) XCheckCell1     LD    R3 onePos
(32A4) 66C0  0110011011000000 (1030)                 LDR   R3 R3 #0
(32A5) 1603  0001011000000011 (1031)                 ADD   R3 R0 R3
(32A6) 0429  0000010000101001 (1032)                 BRZ   checkP1InputReturn
(32A7) 0E29  0000111000101001 (1033)                 BRNZP XBadInput
(32A8) 2744  0010011101000100 (1036) XCheckCell2     LD    R3 twoPos
(32A9) 66C0  0110011011000000 (1037)                 LDR   R3 R3 #0
(32AA) 1603  0001011000000011 (1038)                 ADD   R3 R0 R3
(32AB) 0424  0000010000100100 (1039)                 BRZ   checkP1InputReturn
(32AC) 0E24  0000111000100100 (1040)                 BRNZP XBadInput
(32AD) 2740  0010011101000000 (1043) XCheckCell3     LD    R3 threePos
(32AE) 66C0  0110011011000000 (1044)                 LDR   R3 R3 #0
(32AF) 1603  0001011000000011 (1045)                 ADD   R3 R0 R3
(32B0) 041F  0000010000011111 (1046)                 BRZ   checkP1InputReturn
(32B1) 0E1F  0000111000011111 (1047)                 BRNZP XBadInput
(32B2) 273C  0010011100111100 (1050) XCheckCell4     LD    R3 fourPos
(32B3) 66C0  0110011011000000 (1051)                 LDR   R3 R3 #0
(32B4) 1603  0001011000000011 (1052)                 ADD   R3 R0 R3
(32B5) 041A  0000010000011010 (1053)                 BRZ   checkP1InputReturn
(32B6) 0E1A  0000111000011010 (1054)                 BRNZP XBadInput
(32B7) 2738  0010011100111000 (1057) XCheckCell5     LD    R3 fivePos
(32B8) 66C0  0110011011000000 (1058)                 LDR   R3 R3 #0
(32B9) 1603  0001011000000011 (1059)                 ADD   R3 R0 R3
(32BA) 0415  0000010000010101 (1060)                 BRZ   checkP1InputReturn
(32BB) 0E15  0000111000010101 (1061)                 BRNZP XBadInput
(32BC) 2734  0010011100110100 (1064) XCheckCell6     LD    R3 sixPos
(32BD) 66C0  0110011011000000 (1065)                 LDR   R3 R3 #0
(32BE) 1603  0001011000000011 (1066)                 ADD   R3 R0 R3
(32BF) 0410  0000010000010000 (1067)                 BRZ   checkP1InputReturn
(32C0) 0E10  0000111000010000 (1068)                 BRNZP XBadInput
(32C1) 2730  0010011100110000 (1071) XCheckCell7     LD    R3 sevenPos
(32C2) 66C0  0110011011000000 (1072)                 LDR   R3 R3 #0
(32C3) 1603  0001011000000011 (1073)                 ADD   R3 R0 R3
(32C4) 040B  0000010000001011 (1074)                 BRZ   checkP1InputReturn
(32C5) 0E0B  0000111000001011 (1075)                 BRNZP XBadInput
(32C6) 272C  0010011100101100 (1078) XCheckCell8     LD    R3 eightPos
(32C7) 66C0  0110011011000000 (1079)                 LDR   R3 R3 #0
(32C8) 1603  0001011000000011 (1080)                 ADD   R3 R0 R3
(32C9) 0406  0000010000000110 (1081)                 BRZ   checkP1InputReturn
(32CA) 0E06  0000111000000110 (1082)                 BRNZP XBadInput
(32CB) 2728  0010011100101000 (1085) XCheckCell9     LD    R3 ninePos
(32CC) 66C0  0110011011000000 (1086)                 LDR   R3 R3 #0
(32CD) 1603  0001011000000011 (1087)                 ADD   R3 R0 R3
(32CE) 0401  0000010000000001 (1088)                 BRZ   checkP1InputReturn
(32CF) 0E01  0000111000000001 (1089)                 BRNZP XBadInput
(32D0) C1C0  1100000111000000 (1095) checkP1InputReturn RET   
(32D1) 4D4F  0100110101001111 (1098) XBadInput       JSR   XBadInputEntered
(32D2) FFE0  1111111111100000 (1100) negSpace        .FILL xFFE0
